import java.util.List;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private ItemRepository itemRepository;
    private SalesPromotionRepository salesPromotionRepository;

    public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
        this.itemRepository = itemRepository;
        this.salesPromotionRepository = salesPromotionRepository;
    }

    public String bestCharge(List<String> inputs) {
        double promotionTotalPrice = 0;
        double totalPrice = 0;
        StringBuilder result = new StringBuilder("============= Order details =============\n");

        for (String input : inputs) {
            String[] item_str = input.replaceAll(" ", "").split("x");
            //find item
            for (Item item : this.itemRepository.findAll()) {
                if (item.getId().equals(item_str[0])) {
                    int currentItemTotal = Integer.parseInt(item_str[1]);
                    SalesPromotion itemSalesPromotion = null;
                    // find salesPromotion
                    for (SalesPromotion salesPromotion : this.salesPromotionRepository.findAll()) {
                        if (salesPromotion.getRelatedItems().indexOf(item.getId()) >= 0) {
                            itemSalesPromotion = salesPromotion;
                            break;
                        }
                    }
                    // calculate the promotion
                    if (itemSalesPromotion != null) {
                        promotionTotalPrice += item.getPrice() * 0.5 * currentItemTotal;
                    }
                    // calculate total price
                    totalPrice += item.getPrice() * currentItemTotal;
                    result.append(String.format("%s x %d = %.0f yuan\n", item.getName(), currentItemTotal, currentItemTotal * item.getPrice()));
                    break;
                }
            }
        }
        result.append("-----------------------------------\n");
        // math promotion to use
        if (totalPrice >= 30 || promotionTotalPrice > 0) {
            result.append("Promotion used:\n");
            if (6 >= promotionTotalPrice) {
                result.append("满30减6 yuan，saving 6 yuan\n");
                promotionTotalPrice = 6;
            } else {
                result.append(String.format("Half price for certain dishes (Braised chicken，Cold noodles)，saving %.0f yuan\n", promotionTotalPrice));
            }
            result.append("-----------------------------------\n");
        }
        result.append(String.format("Total：%.0f yuan\n", totalPrice - promotionTotalPrice))
                .append("===================================");
        return result.toString();
    }
}
